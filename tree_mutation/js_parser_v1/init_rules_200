&$%&$%&$%&$%&$%&$%&$%&$%&$%= {
  prop1: 1,
  prop2: 2
}@#@= {
  _a: 3,
  get a() {
    return this._a;
  }
}@#@= 1000000@#@= 7@#@= 3@#@= 0@#@= {
  valueOf: function () {
    return 109.5;
  }
}@#@= {
  valueOf: function () {
    return 5.5;
  }
}@#@= {
  10: 5
}@#@= 1@#@= 2@#@= 6@#@= 100@#@= new Boolean(false)@#@= {}@#@= 34@#@= 105@#@= 10@#@= 30@#@= {
  _a: 3,
  get a() {
    return this._a;
  },
  set a(newa) {
    this._a = newa;
  }

}@#@= new String("100")@#@= new String("10")@#@= {
  10.25: 5
}@#@= 100.5@#@= [1, 2, 4]@#@= (0 in a) ? 1 : 2@#@= 10000000@#@= 109.5@#@= 5.5@#@= 4@#@= 5@#@= {
  "b": 5
}@#@= new Boolean(true)@#@= "100"@#@= ""@#@= {
  valueOf: function () {
    return -Infinity;
  }
}@#@= {
  valueOf: function () {
    return 0;
  }
}@#@= x * x@#@= y * y@#@= tmp1 * tmp1@#@= tmp2 * tmp2@#@= tmp3 * x@#@= tmp4 * y@#@= cached1 + cached2@#@= cached_n_cached + cached_n_cached@#@= new String("")@#@= 550@#@= test()@#@= a + b@#@= new Object()@#@= {
  b: 5
}@#@= {
  get a() {
    return 3;
  }
}@#@= Error()@#@= foo()@#@= [1, 2, 3]@#@&$%&$%&$%if (j == 6)
    {
      break
      mainloop
    }@#@if (j == 6)
    {
      continue
      mainloop
    }@#@&$%for (i = 0; i < 3; i++)
{
  a = [];

  for (j = 0; j < 5000; j++)
  {
    a[j] = j;
  }
}@#@for (j = 0; j < 5000; j++)
  {
    a[j] = j;
  }@#@for (var i = 0; i < count; i++)
{
  tmp1 = x * x;
  tmp2 = y * y;
  tmp3 = tmp1 * tmp1;
  tmp4 = tmp2 * tmp2;
}@#@for (var i = 0; i < 10; ++i)
{
  for (var j = 0; j < 10; ++j)
  {
    if (j == 6)
    {
      break
      mainloop
    }

    ++cnt;
  }
}@#@for (var j = 0; j < 10; ++j)
  {
    if (j == 6)
    {
      break
      mainloop
    }

    ++cnt;
  }@#@for (var i = 0; i < 100; i++)
{
  ({} + f ({}, 12));
}@#@for(var i = 0; i < 100; i++)
{
  var obj = {}, obj_l;
  obj_l = obj;

  for (var k = 0; k < 1500; k++)
  {
    obj_l.prop = {};
    obj_l = obj_l.prop;
  }
}@#@for (var k = 0; k < 1500; k++)
  {
    obj_l.prop = {};
    obj_l = obj_l.prop;
  }@#@for (var i = 0; i < 10; ++i)
{
  for (var j = 0; j < 10; ++j)
  {
    if (j == 6)
    {
      continue
      mainloop
    }

    ++cnt;
  }
}@#@for (var j = 0; j < 10; ++j)
  {
    if (j == 6)
    {
      continue
      mainloop
    }

    ++cnt;
  }@#@for (var i = (0 in a) ? 1 : 2; i < 10; ++i)
{
  ++cnt;
}@#@for(let i in o)
    {
        o[i];
    }@#@&$%continue
      mainloop@#@&$%break
      mainloop@#@&$%return ret_val + ret_val;@#@return
  a + b@#@return c;@#@return obj;@#@return 7;@#@&$%&$%&$%&$%&$%&$%&$%&$%&$%&$%&$%&$%&$%function f (o, i) {
  if (--i > 0) {
    f ({a:o, b:o}, i);
  }
}@#@function test()
{
  var a = 1, b = 2;

  return
  a + b
}@#@function test()
{
  var a = 10, b = 5;
  var c = a + b

  return c;
}@#@function c(arg)
{
  var obj = new Object();
  obj.par = arg;
  obj.print = function () {
    return arg;
  }
  return obj;
}@#@function foo()
{
    var o = Error();
    for(let i in o)
    {
        o[i];
    }
}@#@function g(){
	q = g.caller;
	return 7;
}@#@&$%o, i@#@x, y@#@arg@#@&$%return this._a;@#@return 109.5;@#@return 5.5;@#@if (--i > 0) {
    f ({a:o, b:o}, i);
  }@#@this._a = newa;@#@return -Infinity;@#@return 0;@#@var a = 1, b = 2;

  return
  a + b@#@var a = 10, b = 5;
  var c = a + b

  return c;@#@var obj = new Object();
  obj.par = arg;
  obj.print = function () {
    return arg;
  }
  return obj;@#@return arg;@#@return 3;@#@var o = Error();
    for(let i in o)
    {
        o[i];
    }@#@q = g.caller;
	return 7;@#@&$%&$%1, 2, 4@#@1, 2, 3@#@4, 5, 6@#@&$%&$%&$%n: Number,
  s: String@#@prop1: 1,
  prop2: 2@#@_a: 3,
  get a() {
    return this._a;
  }@#@valueOf: function () {
    return 109.5;
  }@#@valueOf: function () {
    return 5.5;
  }@#@10: 5@#@a:o, b:o@#@_a: 3,
  get a() {
    return this._a;
  },
  set a(newa) {
    this._a = newa;
  }@#@10.25: 5@#@"b": 5@#@valueOf: function () {
    return -Infinity;
  }@#@valueOf: function () {
    return 0;
  }@#@b: 5@#@get a() {
    return 3;
  }@#@get : g@#@&$%n: Number@#@s: String@#@prop1: 1@#@prop2: 2@#@_a: 3@#@get a() {
    return this._a;
  }@#@a:o@#@b:o@#@set a(newa) {
    this._a = newa;
  }@#@&$%n@#@s@#@prop1@#@prop2@#@_a@#@valueOf@#@10@#@10.25@#@"b"@#@get@#@&$%newa@#@&$%(new Boolean(true) * new Boolean(true) === 1)@#@(true)@#@(isNaN(false / null) === true)@#@(false / null)@#@(new Number(1) * new Boolean(true) === 1)@#@(1)@#@(new String("5") / null === Number.POSITIVE_INFINITY)@#@("5")@#@(true * null === 0)@#@(true * 1 === 1)@#@(Number.MAX_VALUE / 0.5 === Number.POSITIVE_INFINITY)@#@(((a).n + (b).n === 3) && ((a).s + (b).s === "qwerty"))@#@(delete(a.n) === true)@#@(isNaN(undefined * null) === true)@#@(undefined * null)@#@(a.prop1 === 1 && a.prop2 === 2)@#@(a.a === 5)@#@(Number.MIN_VALUE * (-0.5) === -0)@#@(null % 1 === +0)@#@("1" * true === 1)@#@(isNaN(Number.NaN * 1) === true)@#@(Number.NaN * 1)@#@((-1) * Number.POSITIVE_INFINITY === Number.NEGATIVE_INFINITY)@#@(Number.NEGATIVE_INFINITY / 2 === Number.NEGATIVE_INFINITY)@#@(isNaN(undefined % 1))@#@(undefined % 1)@#@("2" * 3 === 6)@#@(isNaN(Infinity % 0))@#@(Infinity % 0)@#@(Number.MAX_VALUE / Number.MAX_VALUE === 1)@#@(isNaN(undefined * new String("1")) === true)@#@(undefined * new String("1"))@#@("1")@#@("1" * null === 0)@#@(null * new String("2") === 0)@#@("2")@#@(true * true === 1)@#@(isNaN(Number.NaN * +0) === true)@#@(Number.NaN * +0)@#@(isNaN(Number.NaN / Number.NEGATIVE_INFINITY) === true)@#@(Number.NaN / Number.NEGATIVE_INFINITY)@#@(new Number(6) / 3 === 2)@#@(6)@#@("Hello JerryScript!")@#@(isNaN(Number.POSITIVE_INFINITY * 0) === true)@#@(Number.POSITIVE_INFINITY * 0)@#@(1 * true === 1)@#@(new String("2") / new Number(1) === 2)@#@(Number.NEGATIVE_INFINITY * 1 === Number.NEGATIVE_INFINITY)@#@(n % d === 5)@#@(Number.NEGATIVE_INFINITY * Number.NEGATIVE_INFINITY === Number.POSITIVE_INFINITY)@#@(2 * Number.MAX_VALUE === Number.POSITIVE_INFINITY)@#@(Number.POSITIVE_INFINITY / 0 === Number.POSITIVE_INFINITY)@#@(Number.NEGATIVE_INFINITY / 0 === Number.NEGATIVE_INFINITY)@#@(a[10] === 5)@#@(typeof (a.property) === "undefined")@#@(isNaN("a" / "3") === true)@#@("a" / "3")@#@(a + b === (a + b))@#@(a / 3 === 2)@#@(isNaN(0 / 0) === true)@#@(0 / 0)@#@(isNaN(undefined * undefined) === true)@#@(undefined * undefined)@#@(Number.MIN_VALUE / 2 === 0)@#@(1 / null === Number.POSITIVE_INFINITY)@#@(null / new Boolean(true) === 0)@#@(a *
        3 === 6)@#@(isNaN(null * undefined) === true)@#@(null * undefined)@#@(isNaN(new Number(5) / undefined) === true)@#@(new Number(5) / undefined)@#@(5)@#@(isNaN(Number.NaN * -0) === true)@#@(Number.NaN * -0)@#@(cnt == 60)@#@(isNaN(Number.NaN / Number.MAX_VALUE) === true)@#@(Number.NaN / Number.MAX_VALUE)@#@(isNaN(Number.NEGATIVE_INFINITY * 0) === true)@#@(Number.NEGATIVE_INFINITY * 0)@#@(isNaN({} / {}) === true)@#@({} / {})@#@(isNaN(new Boolean(true) * undefined) === true)@#@(new Boolean(true) * undefined)@#@(isNaN(undefined * new Boolean(true)) === true)@#@(undefined * new Boolean(true))@#@(null * 1 === 0)@#@(isNaN("a" / 2) === true)@#@("a" / 2)@#@(false)@#@(isNaN(n % d))@#@(n % d)@#@(new String("2") * new String("1") === 2)@#@("abcdefghi")@#@(isNaN(Number.NEGATIVE_INFINITY / Number.POSITIVE_INFINITY) === true)@#@(Number.NEGATIVE_INFINITY / Number.POSITIVE_INFINITY)@#@({a:o, b:o}, i)@#@({}, 12)@#@(isNaN(undefined / new Number(5)) === true)@#@(undefined / new Number(5))@#@(Number.MAX_VALUE / (-0.5) === Number.NEGATIVE_INFINITY)@#@(glob === undefined)@#@(glob === 34)@#@(false * false === 0)@#@(new String("2") / new Boolean(false) === Number.POSITIVE_INFINITY)@#@(a == 33)@#@(isNaN(Number.NaN / Number.POSITIVE_INFINITY) === true)@#@(Number.NaN / Number.POSITIVE_INFINITY)@#@(null * true === 0)@#@("2" / null === Number.POSITIVE_INFINITY)@#@(null / new Number(5) === 0)@#@(new Number(5) / null === Number.POSITIVE_INFINITY)@#@(new String("2") * true === 2)@#@(isNaN(undefined / new String("5")) === true)@#@(undefined / new String("5"))@#@(null * new Boolean(true) === 0)@#@(null / 1 === 0)@#@("100")@#@("10")@#@(n % d === 0)@#@(isNaN(5 % 0))@#@(5 % 0)@#@(cnt == 90)@#@(new String("2") * new Boolean(true) === 2)@#@(a[10.25] === 5)@#@(n % d === 0.5)@#@(+0 % 5 === +0)@#@("6" / 2 === 3)@#@(isNaN(Number.NEGATIVE_INFINITY / Number.NEGATIVE_INFINITY) === true)@#@(Number.NEGATIVE_INFINITY / Number.NEGATIVE_INFINITY)@#@("6" / "3" === 2)@#@(6 / "2" === 3)@#@(cnt == 9)@#@(isNaN(true / undefined) === true)@#@(true / undefined)@#@(isNaN(1 % null))@#@(1 % null)@#@(100 % -3 > 0)@#@(new Boolean(true) / false === Number.POSITIVE_INFINITY)@#@(-100 % -3 < 0)@#@(isNaN(Number.NaN / +0) === true)@#@(Number.NaN / +0)@#@((a) + (b) === (a + b))@#@(a * b === 6)@#@(isNaN(-Infinity % 3))@#@(-Infinity % 3)@#@(isNaN(undefined / true) === true)@#@(undefined / true)@#@((-1) * Number.NEGATIVE_INFINITY === Number.POSITIVE_INFINITY)@#@(a === 4 && c === 4)@#@(a / (a = 1) === 0)@#@(isNaN(new Boolean(true) / undefined) === true)@#@(new Boolean(true) / undefined)@#@(isNaN(null / null) === true)@#@(null / null)@#@(true / false === Number.POSITIVE_INFINITY)@#@(isNaN(new Number(1) * undefined) === true)@#@(new Number(1) * undefined)@#@(a * (a = 1) === 0)@#@(a.b === 5)@#@(2 / true === 2)@#@(isNaN(0 * Number.POSITIVE_INFINITY) === true)@#@(0 * Number.POSITIVE_INFINITY)@#@(isNaN({} * {}) === true)@#@({} * {})@#@(false / new Boolean(true) === 0)@#@(null / "2" === 0)@#@(isNaN(undefined / 1) === true)@#@(undefined / 1)@#@(6 / 3 === 2)@#@(false / true === 0)@#@(new String("2") / new String("1") === 2)@#@(isNaN(undefined * "1") === true)@#@(undefined * "1")@#@(isNaN("1" * undefined) === true)@#@("1" * undefined)@#@(null / new String("5") === 0)@#@(isNaN(undefined / undefined) === true)@#@(undefined / undefined)@#@(isNaN(Number.NaN * Number.NEGATIVE_INFINITY) === true)@#@(Number.NaN * Number.NEGATIVE_INFINITY)@#@(1 * new Number(1) === 1)@#@(new Number(2) * null === 0)@#@(2)@#@(2 / Number.POSITIVE_INFINITY === 0)@#@(a * 2 === 6)@#@(new Number(6) / new Number(3) === 2)@#@(3)@#@(2 / Number.MIN_VALUE === Number.POSITIVE_INFINITY)@#@(isNaN("a" * "1") === true)@#@("a" * "1")@#@("2" / true === 2)@#@(isNaN(-Infinity % Infinity))@#@(-Infinity % Infinity)@#@(true / "1" === 1)@#@(true / true === 1)@#@(6 / new Number(3) === 2)@#@(isNaN("2" / undefined) === true)@#@("2" / undefined)@#@(x, y)@#@(isNaN(undefined / new Boolean(true)) === true)@#@(undefined / new Boolean(true))@#@(isNaN(undefined / "2") === true)@#@(undefined / "2")@#@(false / new String("2") === 0)@#@(typeof (a) === "undefined")@#@(new Number(2) / new Boolean(true) === 2)@#@("")@#@(0 / Number.NEGATIVE_INFINITY === 0)@#@(isNaN(Number.NaN / 2) === true)@#@(Number.NaN / 2)@#@(true / 1 === 1)@#@(new String("2") / 1 === 2)@#@(new Boolean(false) / new Boolean(true) === 0)@#@(isNaN(new String("5") / undefined) === true)@#@(new String("5") / undefined)@#@((a = 1) / a === 1)@#@(isNaN(Number.POSITIVE_INFINITY / Number.NEGATIVE_INFINITY) === true)@#@(Number.POSITIVE_INFINITY / Number.NEGATIVE_INFINITY)@#@(isNaN(NaN % NaN))@#@(NaN % NaN)@#@(0 / Number.POSITIVE_INFINITY === 0)@#@(a / b === 2)@#@(isNaN(Number.NaN / -0) === true)@#@(Number.NaN / -0)@#@(isNaN(NaN % 1))@#@(NaN % 1)@#@(null / true === 0)@#@(5 % Infinity === 5)@#@(new Boolean(true) / null === Number.POSITIVE_INFINITY)@#@()@#@(v !== 3)@#@(typeof v === "undefined")@#@(isNaN(undefined / null) === true)@#@(undefined / null)@#@(isNaN(Number.POSITIVE_INFINITY / Number.POSITIVE_INFINITY) === true)@#@(Number.POSITIVE_INFINITY / Number.POSITIVE_INFINITY)@#@(a === 4 && c === 6)@#@(isNaN("6" / "a") === true)@#@("6" / "a")@#@(isNaN(6 / "a") === true)@#@(6 / "a")@#@(test() == 15)@#@(isNaN(Number.NaN / Number.MIN_VALUE) === true)@#@(Number.NaN / Number.MIN_VALUE)@#@(d + e)@#@(a === 6)@#@((1 / 2) / 4 !== 1 / (2 / 4))@#@(isNaN(Infinity % 3))@#@(Infinity % 3)@#@(isNaN(Number.NaN / Number.NaN) === true)@#@(Number.NaN / Number.NaN)@#@(6 / a === 2)@#@(-0 % 5 === -0)@#@(0 % 5 === 0)@#@(isNaN(100 % NaN))@#@(100 % NaN)@#@(2 / Number.NEGATIVE_INFINITY === -0)@#@(isNaN(1 / undefined) === true)@#@(1 / undefined)@#@(a /
        3 === 2)@#@(-100 % 3 < 0)@#@(new Boolean(false) / new String("2") === 0)@#@(isNaN(null / undefined) === true)@#@(null / undefined)@#@(a.a === 3)@#@(Number.POSITIVE_INFINITY / 2 === Number.POSITIVE_INFINITY)@#@(Array.prototype, "3", {get : g})@#@(0x77777777, 0x77777777, 0)@#@&$%new Boolean(true) * new Boolean(true) === 1@#@true@#@isNaN(false / null) === true@#@false / null@#@new Number(1) * new Boolean(true) === 1@#@new String("5") / null === Number.POSITIVE_INFINITY@#@"5"@#@true * null === 0@#@true * 1 === 1@#@Number.MAX_VALUE / 0.5 === Number.POSITIVE_INFINITY@#@((a).n + (b).n === 3) && ((a).s + (b).s === "qwerty")@#@delete(a.n) === true@#@isNaN(undefined * null) === true@#@undefined * null@#@a.prop1 === 1 && a.prop2 === 2@#@a.a === 5@#@Number.MIN_VALUE * (-0.5) === -0@#@null % 1 === +0@#@"1" * true === 1@#@isNaN(Number.NaN * 1) === true@#@Number.NaN * 1@#@(-1) * Number.POSITIVE_INFINITY === Number.NEGATIVE_INFINITY@#@Number.NEGATIVE_INFINITY / 2 === Number.NEGATIVE_INFINITY@#@isNaN(undefined % 1)@#@undefined % 1@#@"2" * 3 === 6@#@isNaN(Infinity % 0)@#@Infinity % 0@#@Number.MAX_VALUE / Number.MAX_VALUE === 1@#@isNaN(undefined * new String("1")) === true@#@undefined * new String("1")@#@"1" * null === 0@#@null * new String("2") === 0@#@true * true === 1@#@isNaN(Number.NaN * +0) === true@#@Number.NaN * +0@#@isNaN(Number.NaN / Number.NEGATIVE_INFINITY) === true@#@Number.NaN / Number.NEGATIVE_INFINITY@#@new Number(6) / 3 === 2@#@"Hello JerryScript!"@#@isNaN(Number.POSITIVE_INFINITY * 0) === true@#@Number.POSITIVE_INFINITY * 0@#@1 * true === 1@#@new String("2") / new Number(1) === 2@#@Number.NEGATIVE_INFINITY * 1 === Number.NEGATIVE_INFINITY@#@n % d === 5@#@Number.NEGATIVE_INFINITY * Number.NEGATIVE_INFINITY === Number.POSITIVE_INFINITY@#@2 * Number.MAX_VALUE === Number.POSITIVE_INFINITY@#@Number.POSITIVE_INFINITY / 0 === Number.POSITIVE_INFINITY@#@Number.NEGATIVE_INFINITY / 0 === Number.NEGATIVE_INFINITY@#@a[10] === 5@#@typeof (a.property) === "undefined"@#@isNaN("a" / "3") === true@#@"a" / "3"@#@a + b === (a + b)@#@a / 3 === 2@#@isNaN(0 / 0) === true@#@0 / 0@#@isNaN(undefined * undefined) === true@#@undefined * undefined@#@Number.MIN_VALUE / 2 === 0@#@1 / null === Number.POSITIVE_INFINITY@#@null / new Boolean(true) === 0@#@a *
        3 === 6@#@isNaN(null * undefined) === true@#@null * undefined@#@isNaN(new Number(5) / undefined) === true@#@new Number(5) / undefined@#@isNaN(Number.NaN * -0) === true@#@Number.NaN * -0@#@cnt == 60@#@isNaN(Number.NaN / Number.MAX_VALUE) === true@#@Number.NaN / Number.MAX_VALUE@#@isNaN(Number.NEGATIVE_INFINITY * 0) === true@#@Number.NEGATIVE_INFINITY * 0@#@isNaN({} / {}) === true@#@{} / {}@#@isNaN(new Boolean(true) * undefined) === true@#@new Boolean(true) * undefined@#@isNaN(undefined * new Boolean(true)) === true@#@undefined * new Boolean(true)@#@null * 1 === 0@#@isNaN("a" / 2) === true@#@"a" / 2@#@isNaN(n % d)@#@new String("2") * new String("1") === 2@#@"abcdefghi"@#@isNaN(Number.NEGATIVE_INFINITY / Number.POSITIVE_INFINITY) === true@#@Number.NEGATIVE_INFINITY / Number.POSITIVE_INFINITY@#@{a:o, b:o}, i@#@{}, 12@#@isNaN(undefined / new Number(5)) === true@#@undefined / new Number(5)@#@Number.MAX_VALUE / (-0.5) === Number.NEGATIVE_INFINITY@#@glob === undefined@#@glob === 34@#@false * false === 0@#@new String("2") / new Boolean(false) === Number.POSITIVE_INFINITY@#@a == 33@#@isNaN(Number.NaN / Number.POSITIVE_INFINITY) === true@#@Number.NaN / Number.POSITIVE_INFINITY@#@null * true === 0@#@"2" / null === Number.POSITIVE_INFINITY@#@null / new Number(5) === 0@#@new Number(5) / null === Number.POSITIVE_INFINITY@#@new String("2") * true === 2@#@isNaN(undefined / new String("5")) === true@#@undefined / new String("5")@#@null * new Boolean(true) === 0@#@null / 1 === 0@#@"100"@#@"10"@#@n % d === 0@#@isNaN(5 % 0)@#@5 % 0@#@cnt == 90@#@new String("2") * new Boolean(true) === 2@#@a[10.25] === 5@#@n % d === 0.5@#@+0 % 5 === +0@#@"6" / 2 === 3@#@isNaN(Number.NEGATIVE_INFINITY / Number.NEGATIVE_INFINITY) === true@#@Number.NEGATIVE_INFINITY / Number.NEGATIVE_INFINITY@#@"6" / "3" === 2@#@6 / "2" === 3@#@cnt == 9@#@isNaN(true / undefined) === true@#@true / undefined@#@isNaN(1 % null)@#@1 % null@#@100 % -3 > 0@#@new Boolean(true) / false === Number.POSITIVE_INFINITY@#@-100 % -3 < 0@#@isNaN(Number.NaN / +0) === true@#@Number.NaN / +0@#@(a) + (b) === (a + b)@#@a * b === 6@#@isNaN(-Infinity % 3)@#@-Infinity % 3@#@isNaN(undefined / true) === true@#@undefined / true@#@(-1) * Number.NEGATIVE_INFINITY === Number.POSITIVE_INFINITY@#@a === 4 && c === 4@#@a / (a = 1) === 0@#@isNaN(new Boolean(true) / undefined) === true@#@new Boolean(true) / undefined@#@isNaN(null / null) === true@#@null / null@#@true / false === Number.POSITIVE_INFINITY@#@isNaN(new Number(1) * undefined) === true@#@new Number(1) * undefined@#@a * (a = 1) === 0@#@a.b === 5@#@2 / true === 2@#@isNaN(0 * Number.POSITIVE_INFINITY) === true@#@0 * Number.POSITIVE_INFINITY@#@isNaN({} * {}) === true@#@{} * {}@#@false / new Boolean(true) === 0@#@null / "2" === 0@#@isNaN(undefined / 1) === true@#@undefined / 1@#@6 / 3 === 2@#@false / true === 0@#@new String("2") / new String("1") === 2@#@isNaN(undefined * "1") === true@#@undefined * "1"@#@isNaN("1" * undefined) === true@#@"1" * undefined@#@null / new String("5") === 0@#@isNaN(undefined / undefined) === true@#@undefined / undefined@#@isNaN(Number.NaN * Number.NEGATIVE_INFINITY) === true@#@Number.NaN * Number.NEGATIVE_INFINITY@#@1 * new Number(1) === 1@#@new Number(2) * null === 0@#@2 / Number.POSITIVE_INFINITY === 0@#@a * 2 === 6@#@new Number(6) / new Number(3) === 2@#@2 / Number.MIN_VALUE === Number.POSITIVE_INFINITY@#@isNaN("a" * "1") === true@#@"a" * "1"@#@"2" / true === 2@#@isNaN(-Infinity % Infinity)@#@-Infinity % Infinity@#@true / "1" === 1@#@true / true === 1@#@6 / new Number(3) === 2@#@isNaN("2" / undefined) === true@#@"2" / undefined@#@isNaN(undefined / new Boolean(true)) === true@#@undefined / new Boolean(true)@#@isNaN(undefined / "2") === true@#@undefined / "2"@#@false / new String("2") === 0@#@typeof (a) === "undefined"@#@new Number(2) / new Boolean(true) === 2@#@0 / Number.NEGATIVE_INFINITY === 0@#@isNaN(Number.NaN / 2) === true@#@Number.NaN / 2@#@true / 1 === 1@#@new String("2") / 1 === 2@#@new Boolean(false) / new Boolean(true) === 0@#@isNaN(new String("5") / undefined) === true@#@new String("5") / undefined@#@(a = 1) / a === 1@#@isNaN(Number.POSITIVE_INFINITY / Number.NEGATIVE_INFINITY) === true@#@Number.POSITIVE_INFINITY / Number.NEGATIVE_INFINITY@#@isNaN(NaN % NaN)@#@NaN % NaN@#@0 / Number.POSITIVE_INFINITY === 0@#@a / b === 2@#@isNaN(Number.NaN / -0) === true@#@Number.NaN / -0@#@isNaN(NaN % 1)@#@NaN % 1@#@null / true === 0@#@5 % Infinity === 5@#@new Boolean(true) / null === Number.POSITIVE_INFINITY@#@v !== 3@#@typeof v === "undefined"@#@isNaN(undefined / null) === true@#@undefined / null@#@isNaN(Number.POSITIVE_INFINITY / Number.POSITIVE_INFINITY) === true@#@Number.POSITIVE_INFINITY / Number.POSITIVE_INFINITY@#@a === 4 && c === 6@#@isNaN("6" / "a") === true@#@"6" / "a"@#@isNaN(6 / "a") === true@#@6 / "a"@#@test() == 15@#@isNaN(Number.NaN / Number.MIN_VALUE) === true@#@Number.NaN / Number.MIN_VALUE@#@d + e@#@a === 6@#@(1 / 2) / 4 !== 1 / (2 / 4)@#@isNaN(Infinity % 3)@#@Infinity % 3@#@isNaN(Number.NaN / Number.NaN) === true@#@Number.NaN / Number.NaN@#@6 / a === 2@#@-0 % 5 === -0@#@0 % 5 === 0@#@isNaN(100 % NaN)@#@100 % NaN@#@2 / Number.NEGATIVE_INFINITY === -0@#@isNaN(1 / undefined) === true@#@1 / undefined@#@a /
        3 === 2@#@-100 % 3 < 0@#@new Boolean(false) / new String("2") === 0@#@isNaN(null / undefined) === true@#@null / undefined@#@a.a === 3@#@Number.POSITIVE_INFINITY / 2 === Number.POSITIVE_INFINITY@#@Array.prototype, "3", {get : g}@#@0x77777777, 0x77777777, 0@#@&$%assert(new Boolean(true) * new Boolean(true) === 1)@#@assert(isNaN(false / null) === true)@#@assert(new Number(1) * new Boolean(true) === 1)@#@assert(new String("5") / null === Number.POSITIVE_INFINITY)@#@assert(true * null === 0)@#@assert(true * 1 === 1)@#@assert(Number.MAX_VALUE / 0.5 === Number.POSITIVE_INFINITY)@#@a = {
  n: Number,
  s: String
}@#@b = {
  n: Number,
  s: String
}@#@a.n = 1@#@b.n = 2@#@a.s = "qwe"@#@b.s = "rty"@#@assert(((a).n + (b).n === 3) && ((a).s + (b).s === "qwerty"))@#@(a).n + (b).n === 3@#@(a).s + (b).s === "qwerty"@#@assert(delete(a.n) === true)@#@assert(isNaN(undefined * null) === true)@#@assert(a.prop1 === 1 && a.prop2 === 2)@#@this._a@#@a._a = 5@#@assert(a.a === 5)@#@assert(Number.MIN_VALUE * (-0.5) === -0)@#@-0.5@#@assert(null % 1 === +0)@#@assert("1" * true === 1)@#@assert(isNaN(Number.NaN * 1) === true)@#@assert((-1) * Number.POSITIVE_INFINITY === Number.NEGATIVE_INFINITY)@#@-1@#@assert(Number.NEGATIVE_INFINITY / 2 === Number.NEGATIVE_INFINITY)@#@assert(isNaN(undefined % 1))@#@assert("2" * 3 === 6)@#@assert(isNaN(Infinity % 0))@#@assert(Number.MAX_VALUE / Number.MAX_VALUE === 1)@#@assert(isNaN(undefined * new String("1")) === true)@#@i = 0@#@i < 3@#@i++@#@a = []@#@j = 0@#@j < 5000@#@j++@#@a[j] = j@#@assert("1" * null === 0)@#@assert(null * new String("2") === 0)@#@i < count@#@tmp1 = x * x@#@tmp2 = y * y@#@tmp3 = tmp1 * tmp1@#@tmp4 = tmp2 * tmp2@#@assert(true * true === 1)@#@assert(isNaN(Number.NaN * +0) === true)@#@assert(isNaN(Number.NaN / Number.NEGATIVE_INFINITY) === true)@#@assert(new Number(6) / 3 === 2)@#@print ("Hello JerryScript!")@#@assert(isNaN(Number.POSITIVE_INFINITY * 0) === true)@#@assert(1 * true === 1)@#@assert(new String("2") / new Number(1) === 2)@#@assert(Number.NEGATIVE_INFINITY * 1 === Number.NEGATIVE_INFINITY)@#@109.5@#@5.5@#@assert(Number.NEGATIVE_INFINITY * Number.NEGATIVE_INFINITY === Number.POSITIVE_INFINITY)@#@assert(2 * Number.MAX_VALUE === Number.POSITIVE_INFINITY)@#@assert(Number.POSITIVE_INFINITY / 0 === Number.POSITIVE_INFINITY)@#@assert(Number.NEGATIVE_INFINITY / 0 === Number.NEGATIVE_INFINITY)@#@assert(a[10] === 5)@#@assert(typeof (a.property) === "undefined")@#@a.property@#@assert(isNaN("a" / "3") === true)@#@assert(a + b === (a + b))@#@assert(a / 3 === 2)@#@assert(isNaN(0 / 0) === true)@#@assert(isNaN(undefined * undefined) === true)@#@assert(Number.MIN_VALUE / 2 === 0)@#@assert(1 / null === Number.POSITIVE_INFINITY)@#@assert(null / new Boolean(true) === 0)@#@assert(a *
        3 === 6)@#@assert(isNaN(null * undefined) === true)@#@assert(isNaN(new Number(5) / undefined) === true)@#@assert(isNaN(Number.NaN * -0) === true)@#@i < 10@#@++i@#@j < 10@#@++j@#@j == 6@#@++cnt@#@assert(cnt == 60)@#@assert(isNaN(Number.NaN / Number.MAX_VALUE) === true)@#@assert(isNaN(Number.NEGATIVE_INFINITY * 0) === true)@#@assert(isNaN({} / {}) === true)@#@assert(isNaN(new Boolean(true) * undefined) === true)@#@assert(isNaN(undefined * new Boolean(true)) === true)@#@assert(null * 1 === 0)@#@assert(isNaN("a" / 2) === true)@#@assert(isNaN(n % d))@#@assert(new String("2") * new String("1") === 2)@#@/a[a-z]/.exec("abcdefghi")@#@assert(isNaN(Number.NEGATIVE_INFINITY / Number.POSITIVE_INFINITY) === true)@#@--i > 0@#@f ({a:o, b:o}, i)@#@i < 100@#@({} + f ({}, 12))@#@{} + f ({}, 12)@#@obj_l = obj@#@k < 1500@#@k++@#@obj_l.prop = {}@#@obj_l = obj_l.prop@#@assert(isNaN(undefined / new Number(5)) === true)@#@assert(Number.MAX_VALUE / (-0.5) === Number.NEGATIVE_INFINITY)@#@assert (glob === undefined)@#@assert (glob === 34)@#@assert(false * false === 0)@#@assert(new String("2") / new Boolean(false) === Number.POSITIVE_INFINITY)@#@a = b + c@#@assert (a == 33)@#@assert(isNaN(Number.NaN / Number.POSITIVE_INFINITY) === true)@#@this._a = newa@#@a.a = 5@#@assert(null * true === 0)@#@assert("2" / null === Number.POSITIVE_INFINITY)@#@assert(null / new Number(5) === 0)@#@assert(new Number(5) / null === Number.POSITIVE_INFINITY)@#@assert(new String("2") * true === 2)@#@assert(isNaN(undefined / new String("5")) === true)@#@assert(null * new Boolean(true) === 0)@#@assert(null / 1 === 0)@#@assert(n % d === 0)@#@assert(isNaN(5 % 0))@#@assert(cnt == 90)@#@assert(new String("2") * new Boolean(true) === 2)@#@assert(a[10.25] === 5)@#@assert(n % d === 0.5)@#@assert(+0 % 5 === +0)@#@assert("6" / 2 === 3)@#@assert(isNaN(Number.NEGATIVE_INFINITY / Number.NEGATIVE_INFINITY) === true)@#@assert("6" / "3" === 2)@#@assert(6 / "2" === 3)@#@0 in a@#@assert(cnt == 9)@#@assert(isNaN(true / undefined) === true)@#@assert(isNaN(1 % null))@#@assert(100 % -3 > 0)@#@assert(new Boolean(true) / false === Number.POSITIVE_INFINITY)@#@assert(-100 % -3 < 0)@#@assert(isNaN(Number.NaN / +0) === true)@#@assert((a) + (b) === (a + b))@#@assert(a * b === 6)@#@assert(isNaN(-Infinity % 3))@#@assert(isNaN(undefined / true) === true)@#@assert((-1) * Number.NEGATIVE_INFINITY === Number.POSITIVE_INFINITY)@#@a = b@#@--c@#@assert(a === 4 && c === 4)@#@assert(a / (a = 1) === 0)@#@a = 1@#@assert(isNaN(new Boolean(true) / undefined) === true)@#@assert(isNaN(null / null) === true)@#@assert(true / false === Number.POSITIVE_INFINITY)@#@assert(isNaN(new Number(1) * undefined) === true)@#@assert(a * (a = 1) === 0)@#@assert(a.b === 5)@#@assert(2 / true === 2)@#@assert(isNaN(0 * Number.POSITIVE_INFINITY) === true)@#@assert(isNaN({} * {}) === true)@#@assert(false / new Boolean(true) === 0)@#@assert(null / "2" === 0)@#@assert(isNaN(undefined / 1) === true)@#@assert(6 / 3 === 2)@#@assert(false / true === 0)@#@assert(new String("2") / new String("1") === 2)@#@assert(isNaN(undefined * "1") === true)@#@assert(isNaN("1" * undefined) === true)@#@assert(null / new String("5") === 0)@#@assert(isNaN(undefined / undefined) === true)@#@assert(isNaN(Number.NaN * Number.NEGATIVE_INFINITY) === true)@#@assert(1 * new Number(1) === 1)@#@assert(new Number(2) * null === 0)@#@assert(2 / Number.POSITIVE_INFINITY === 0)@#@assert(a * 2 === 6)@#@assert(new Number(6) / new Number(3) === 2)@#@assert(2 / Number.MIN_VALUE === Number.POSITIVE_INFINITY)@#@assert(isNaN("a" * "1") === true)@#@assert("2" / true === 2)@#@assert(isNaN(-Infinity % Infinity))@#@assert(true / "1" === 1)@#@assert(true / true === 1)@#@assert(6 / new Number(3) === 2)@#@assert(isNaN("2" / undefined) === true)@#@ret_val + ret_val@#@cse_opt(x, y)@#@assert(isNaN(undefined / new Boolean(true)) === true)@#@assert(isNaN(undefined / "2") === true)@#@assert(false / new String("2") === 0)@#@assert(typeof (a) === "undefined")@#@assert(new Number(2) / new Boolean(true) === 2)@#@assert(0 / Number.NEGATIVE_INFINITY === 0)@#@assert(isNaN(Number.NaN / 2) === true)@#@assert(true / 1 === 1)@#@assert(new String("2") / 1 === 2)@#@assert(new Boolean(false) / new Boolean(true) === 0)@#@assert(isNaN(new String("5") / undefined) === true)@#@assert((a = 1) / a === 1)@#@assert(isNaN(Number.POSITIVE_INFINITY / Number.NEGATIVE_INFINITY) === true)@#@assert(isNaN(NaN % NaN))@#@assert(0 / Number.POSITIVE_INFINITY === 0)@#@assert(a / b === 2)@#@assert(isNaN(Number.NaN / -0) === true)@#@assert(isNaN(NaN % 1))@#@assert(null / true === 0)@#@assert(5 % Infinity === 5)@#@assert(new Boolean(true) / null === Number.POSITIVE_INFINITY)@#@assert(v !== 3)@#@assert(typeof v === "undefined")@#@assert(isNaN(undefined / null) === true)@#@assert(isNaN(Number.POSITIVE_INFINITY / Number.POSITIVE_INFINITY) === true)@#@++c@#@assert(a === 4 && c === 6)@#@assert(isNaN("6" / "a") === true)@#@assert(isNaN(6 / "a") === true)@#@assert(test() == 15)@#@assert(isNaN(Number.NaN / Number.MIN_VALUE) === true)@#@obj.par = arg@#@obj.print = function () {
    return arg;
  }@#@a = b + c
        (d + e).print()@#@assert(a === 6)@#@assert((1 / 2) / 4 !== 1 / (2 / 4))@#@1 / 2@#@2 / 4@#@assert(isNaN(Infinity % 3))@#@assert(isNaN(Number.NaN / Number.NaN) === true)@#@assert(6 / a === 2)@#@assert(-0 % 5 === -0)@#@assert(0 % 5 === 0)@#@assert(isNaN(100 % NaN))@#@assert(2 / Number.NEGATIVE_INFINITY === -0)@#@assert(isNaN(1 / undefined) === true)@#@assert(a /
        3 === 2)@#@assert(-100 % 3 < 0)@#@assert(new Boolean(false) / new String("2") === 0)@#@assert(isNaN(null / undefined) === true)@#@assert(a.a === 3)@#@assert(Number.POSITIVE_INFINITY / 2 === Number.POSITIVE_INFINITY)@#@o[i]@#@q = g.caller@#@a.length = 4@#@Object.defineProperty(Array.prototype, "3", {get : g})@#@[4, 5, 6].concat(a)@#@q(0x77777777, 0x77777777, 0)@#@&$%assert@#@Boolean(true) * new Boolean(true) === 1@#@Boolean(true)@#@Boolean@#@new Boolean(true) === 1@#@Boolean(true) === 1@#@1@#@isNaN(false / null)@#@isNaN@#@false@#@null@#@Number(1) * new Boolean(true) === 1@#@Number(1)@#@Number@#@String("5") / null === Number.POSITIVE_INFINITY@#@String("5") / null@#@String("5")@#@String@#@Number.POSITIVE_INFINITY@#@true * null@#@0@#@true * 1@#@Number.MAX_VALUE / 0.5@#@Number.MAX_VALUE@#@0.5@#@a@#@{
  n: Number,
  s: String
}@#@b@#@a.n@#@b.n@#@2@#@a.s@#@"qwe"@#@b.s@#@"rty"@#@((a).n + (b).n === 3)@#@(a).n + (b).n@#@(a).n@#@(a)@#@(b).n@#@(b)@#@3@#@((a).s + (b).s === "qwerty")@#@(a).s + (b).s@#@(a).s@#@(b).s@#@"qwerty"@#@delete(a.n)@#@(a.n)@#@isNaN(undefined * null)@#@undefined@#@{
  prop1: 1,
  prop2: 2
}@#@a.prop1 === 1@#@a.prop1@#@a.prop2 === 2@#@a.prop2@#@{
  _a: 3,
  get a() {
    return this._a;
  }
}@#@this@#@a._a@#@5@#@a.a@#@Number.MIN_VALUE * (-0.5)@#@Number.MIN_VALUE@#@(-0.5)@#@-0@#@null % 1@#@+0@#@"1" * true@#@"1"@#@isNaN(Number.NaN * 1)@#@Number.NaN@#@(-1) * Number.POSITIVE_INFINITY@#@(-1)@#@Number.NEGATIVE_INFINITY@#@Number.NEGATIVE_INFINITY / 2@#@"2" * 3@#@"2"@#@6@#@Infinity@#@Number.MAX_VALUE / Number.MAX_VALUE@#@isNaN(undefined * new String("1"))@#@new String("1")@#@String("1")@#@i@#@[]@#@j@#@5000@#@a[j]@#@"1" * null@#@new String("2") === 0@#@String("2") === 0@#@String("2")@#@1000000@#@7@#@count@#@tmp1@#@x * x@#@x@#@tmp2@#@y * y@#@y@#@tmp3@#@tmp1 * tmp1@#@tmp4@#@tmp2 * tmp2@#@true * true@#@isNaN(Number.NaN * +0)@#@isNaN(Number.NaN / Number.NEGATIVE_INFINITY)@#@Number(6) / 3 === 2@#@Number(6) / 3@#@Number(6)@#@print@#@isNaN(Number.POSITIVE_INFINITY * 0)@#@1 * true@#@String("2") / new Number(1) === 2@#@new Number(1) === 2@#@Number(1) === 2@#@Number.NEGATIVE_INFINITY * 1@#@{
  valueOf: function () {
    return 109.5;
  }
}@#@function () {
    return 109.5;
  }@#@{
  valueOf: function () {
    return 5.5;
  }
}@#@function () {
    return 5.5;
  }@#@n % d@#@d@#@Number.NEGATIVE_INFINITY * Number.NEGATIVE_INFINITY@#@2 * Number.MAX_VALUE@#@Number.POSITIVE_INFINITY / 0@#@Number.NEGATIVE_INFINITY / 0@#@{
  10: 5
}@#@a[10]@#@typeof (a.property)@#@(a.property)@#@"undefined"@#@isNaN("a" / "3")@#@"a"@#@"3"@#@a + b@#@(a + b)@#@a / 3@#@isNaN(0 / 0)@#@isNaN(undefined * undefined)@#@Number.MIN_VALUE / 2@#@1 / null@#@new Boolean(true) === 0@#@Boolean(true) === 0@#@a *
        3@#@isNaN(null * undefined)@#@isNaN(new Number(5) / undefined)@#@Number(5) / undefined@#@Number(5)@#@isNaN(Number.NaN * -0)@#@cnt@#@60@#@isNaN(Number.NaN / Number.MAX_VALUE)@#@isNaN(Number.NEGATIVE_INFINITY * 0)@#@isNaN({} / {})@#@{}@#@isNaN(new Boolean(true) * undefined)@#@Boolean(true) * undefined@#@isNaN(undefined * new Boolean(true))@#@new Boolean(true)@#@null * 1@#@isNaN("a" / 2)@#@100@#@new Boolean(false)@#@Boolean(false)@#@String("2") * new String("1") === 2@#@new String("1") === 2@#@String("1") === 2@#@/a[a-z]/.exec@#@/a[a-z]/@#@isNaN(Number.NEGATIVE_INFINITY / Number.POSITIVE_INFINITY)@#@--i@#@f@#@{a:o, b:o}@#@o@#@f ({}, 12)@#@12@#@obj_l@#@obj@#@k@#@1500@#@obj_l.prop@#@isNaN(undefined / new Number(5))@#@new Number(5)@#@Number.MAX_VALUE / (-0.5)@#@glob@#@34@#@false * false@#@String("2") / new Boolean(false) === Number.POSITIVE_INFINITY@#@new Boolean(false) === Number.POSITIVE_INFINITY@#@Boolean(false) === Number.POSITIVE_INFINITY@#@105@#@30@#@b + c@#@c@#@33@#@isNaN(Number.NaN / Number.POSITIVE_INFINITY)@#@{
  _a: 3,
  get a() {
    return this._a;
  },
  set a(newa) {
    this._a = newa;
  }

}@#@null * true@#@"2" / null@#@new Number(5) === 0@#@Number(5) === 0@#@Number(5) / null === Number.POSITIVE_INFINITY@#@Number(5) / null@#@String("2") * true === 2@#@String("2") * true@#@isNaN(undefined / new String("5"))@#@new String("5")@#@null / 1@#@new String("100")@#@String("100")@#@new String("10")@#@String("10")@#@90@#@String("2") * new Boolean(true) === 2@#@new Boolean(true) === 2@#@Boolean(true) === 2@#@{
  10.25: 5
}@#@a[10.25]@#@100.5@#@+0 % 5@#@"6" / 2@#@"6"@#@isNaN(Number.NEGATIVE_INFINITY / Number.NEGATIVE_INFINITY)@#@"6" / "3"@#@6 / "2"@#@[1, 2, 4]@#@4@#@(0 in a) ? 1 : 2@#@(0 in a)@#@9@#@isNaN(true / undefined)@#@100 % -3@#@-3@#@10000000@#@Boolean(true) / false === Number.POSITIVE_INFINITY@#@Boolean(true) / false@#@-100 % -3@#@-100@#@isNaN(Number.NaN / +0)@#@(a) + (b)@#@a * b@#@-Infinity@#@isNaN(undefined / true)@#@(-1) * Number.NEGATIVE_INFINITY@#@a === 4@#@c === 4@#@a / (a = 1)@#@(a = 1)@#@isNaN(new Boolean(true) / undefined)@#@Boolean(true) / undefined@#@isNaN(null / null)@#@true / false@#@isNaN(new Number(1) * undefined)@#@Number(1) * undefined@#@a * (a = 1)@#@{
  "b": 5
}@#@a.b@#@2 / true@#@isNaN(0 * Number.POSITIVE_INFINITY)@#@isNaN({} * {})@#@null / "2"@#@isNaN(undefined / 1)@#@6 / 3@#@false / true@#@String("2") / new String("1") === 2@#@isNaN(undefined * "1")@#@isNaN("1" * undefined)@#@new String("5") === 0@#@String("5") === 0@#@isNaN(undefined / undefined)@#@isNaN(Number.NaN * Number.NEGATIVE_INFINITY)@#@new Number(1) === 1@#@Number(1) === 1@#@Number(2) * null === 0@#@Number(2) * null@#@Number(2)@#@2 / Number.POSITIVE_INFINITY@#@a * 2@#@Number(6) / new Number(3) === 2@#@new Number(3) === 2@#@Number(3) === 2@#@Number(3)@#@2 / Number.MIN_VALUE@#@isNaN("a" * "1")@#@"2" / true@#@""@#@true / "1"@#@true / true@#@{
  valueOf: function () {
    return -Infinity;
  }
}@#@function () {
    return -Infinity;
  }@#@{
  valueOf: function () {
    return 0;
  }
}@#@function () {
    return 0;
  }@#@isNaN("2" / undefined)@#@tmp3 * x@#@tmp4 * y@#@cached1 + cached2@#@cached1@#@cached2@#@cached_n_cached + cached_n_cached@#@cached_n_cached@#@ret_val@#@cse_opt@#@isNaN(undefined / new Boolean(true))@#@isNaN(undefined / "2")@#@typeof (a)@#@Number(2) / new Boolean(true) === 2@#@new String("")@#@String("")@#@0 / Number.NEGATIVE_INFINITY@#@isNaN(Number.NaN / 2)@#@true / 1@#@String("2") / 1 === 2@#@String("2") / 1@#@Boolean(false) / new Boolean(true) === 0@#@isNaN(new String("5") / undefined)@#@String("5") / undefined@#@(a = 1) / a@#@isNaN(Number.POSITIVE_INFINITY / Number.NEGATIVE_INFINITY)@#@550@#@0 / Number.POSITIVE_INFINITY@#@a / b@#@isNaN(Number.NaN / -0)@#@null / true@#@5 % Infinity@#@Boolean(true) / null === Number.POSITIVE_INFINITY@#@Boolean(true) / null@#@test()@#@test@#@v@#@typeof v@#@isNaN(undefined / null)@#@isNaN(Number.POSITIVE_INFINITY / Number.POSITIVE_INFINITY)@#@c === 6@#@isNaN("6" / "a")@#@isNaN(6 / "a")@#@15@#@isNaN(Number.NaN / Number.MIN_VALUE)@#@new Object()@#@Object()@#@Object@#@obj.par@#@obj.print@#@function () {
    return arg;
  }@#@b + c
        (d + e).print()@#@c
        (d + e).print()@#@c
        (d + e).print@#@c
        (d + e)@#@e@#@(1 / 2) / 4@#@(1 / 2)@#@1 / (2 / 4)@#@(2 / 4)@#@isNaN(Number.NaN / Number.NaN)@#@6 / a@#@-0 % 5@#@0 % 5@#@2 / Number.NEGATIVE_INFINITY@#@{
  b: 5
}@#@isNaN(1 / undefined)@#@a /
        3@#@-100 % 3@#@Boolean(false) / new String("2") === 0@#@isNaN(null / undefined)@#@{
  get a() {
    return 3;
  }
}@#@Number.POSITIVE_INFINITY / 2@#@Error()@#@Error@#@foo()@#@foo@#@q@#@g.caller@#@g@#@[1, 2, 3]@#@a.length@#@Object.defineProperty@#@Array.prototype@#@Array@#@{get : g}@#@[4, 5, 6].concat@#@[4, 5, 6]@#@0x77777777@#@&$%&$%&$%&$%POSITIVE_INFINITY@#@MAX_VALUE@#@MIN_VALUE@#@NaN@#@NEGATIVE_INFINITY@#@property@#@exec@#@prop@#@par@#@caller@#@length@#@defineProperty@#@prototype@#@concat@#@&$%&$%&$%&$%get a@#@&$%set a@#@&$%@#@;@#@assert(delete(a.n) === true);
@#@var d = {
  valueOf: function () {
    return 5.5;
  }
}
assert(n % d === 5)@#@assert(n % d === 5)@#@assert(typeof (a.property) === "undefined");
@#@}

    ++cnt;
  }
}

assert(cnt == 60);
@#@assert (glob === 34);

@#@}

    ++cnt;
  }
}

assert(cnt == 90);@#@--c

assert(a === 4 && c === 4);
@#@assert(a === 4 && c === 4);
@#@2 } 3@#@} 3@#@var d = {
  valueOf: function () {
    return 0;
  }
}
assert(isNaN(n % d))@#@var cached2 = tmp4 * y;
        var cached_n_cached = cached1 + cached2;
        var ret_val = cached_n_cached + cached_n_cached;
    }
    
    return ret_val + ret_val;
};

cse_opt(x, y);@#@}

var v = test();

assert(v !== 3);

assert(typeof v === "undefined")
@#@++c

assert(a === 4 && c === 6);
@#@assert(a === 4 && c === 6);
@#@return c;
}

assert(test() == 15);
@#@let = 1;
@#@return obj;
}

var a, b = 1, d = 2, e = 3;

a = b + c
        (d + e).print()

assert(a === 6);@#@assert(a === 6);@#@&$%&$%